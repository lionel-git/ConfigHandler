<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConfigHandler</name>
    </assembly>
    <members>
        <member name="T:ConfigHandler.BaseConfig">
            <summary>
            Base class for definig configs
            </summary>
        </member>
        <member name="T:ConfigHandler.BaseConfig.VersionOption">
            <summary>
            Options for --Version command line option
            </summary>
        </member>
        <member name="F:ConfigHandler.BaseConfig.VersionOption.True">
            <summary>
            Display infos on non system assemblies
            </summary>
        </member>
        <member name="F:ConfigHandler.BaseConfig.VersionOption.False">
            <summary>
            Do not display version infos
            </summary>
        </member>
        <member name="F:ConfigHandler.BaseConfig.VersionOption.All">
            <summary>
            Display infos for all assemblies
            </summary>
        </member>
        <member name="P:ConfigHandler.BaseConfig.ConfigFile">
            <summary>
            Path to the config file
            </summary>
        </member>
        <member name="P:ConfigHandler.BaseConfig.ParentConfigFile">
            <summary>
            Optional parent config file
            If set, first load parent config and then populate from this config file
            This can be recursive up to 10 levels
            </summary>
        </member>
        <member name="P:ConfigHandler.BaseConfig.Help">
            <summary>
            If set, display help
            </summary>
        </member>
        <member name="P:ConfigHandler.BaseConfig.Version">
            <summary>
            If set, display versions informations
            </summary>
        </member>
        <member name="M:ConfigHandler.BaseConfig.SetDefaultJsonConfig(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            Option to redefine serialisation settings
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:ConfigHandler.BaseConfig.#ctor">
            <summary>
            Instanciate an empty BaseConfig
            </summary>
        </member>
        <member name="M:ConfigHandler.BaseConfig.SetLogger(ConfigHandler.ILogger)">
            <summary>
            Set Logger
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:ConfigHandler.BaseConfig.Save(System.String)">
            <summary>
            Save config to a file
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:ConfigHandler.BaseConfig.ToString">
            <summary>
            Return config as json string
            </summary>
            <returns></returns>
        </member>
        <member name="M:ConfigHandler.BaseConfig.ShowHelp(System.Boolean)">
            <summary>
            Display help on console, with an optional exit
            </summary>
            <param name="exitProgram"></param>
        </member>
        <member name="M:ConfigHandler.BaseConfig.ShowVersion(System.Boolean)">
            <summary>
            Display version infos
            </summary>
            <param name="exitProgram"></param>
        </member>
        <member name="M:ConfigHandler.BaseConfig.LoadAll``1(System.String,System.String[],System.Boolean)">
            <summary>
            Load config from optional file, with optional arguments override
            </summary>
            <typeparam name="T"></typeparam>
            <param name="DefaultConfigFile">The file to load, may recursively refrence other config files (see ParentConfigFile)</param>
            <param name="args">the command line args to parse</param>
            <param name="showHelpVersion">Display Help or Version if flag is set</param>
            <returns></returns>
        </member>
        <member name="T:ConfigHandler.ConfigHandlerException">
            <summary>
            
            </summary>
        </member>
        <member name="M:ConfigHandler.ConfigHandlerException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ConfigHandler.ConfigHandlerException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:ConfigHandler.ConfigHandlerException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="T:ConfigHandler.Helpers">
            <summary>
            Some Helpers
            </summary>
        </member>
        <member name="M:ConfigHandler.Helpers.GetEnumerableAsString(System.Collections.IEnumerable,System.String,System.String,System.Int32)">
            <summary>
            Return the content of a collection as a string with separator
            </summary>
            <param name="list"></param>
            <param name="separator"></param>
            <param name="trailer"></param>
            <param name="countTrailer"></param>
            <returns></returns>
        </member>
        <member name="T:ConfigHandler.ILogger">
            <summary>
            Interface to client logger
            </summary>
        </member>
        <member name="M:ConfigHandler.ILogger.InfoMsg(System.String)">
            <summary>
            Emit an info message
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:ConfigHandler.ILogger.WarnMsg(System.String)">
            <summary>
            Emit a warning mesage
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:ConfigHandler.ILogger.ErrorMsg(System.String)">
            <summary>
            Emit an error message
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:ConfigHandler.OptionAttribute">
            <summary>
            Meta data for describing an option
            </summary>
        </member>
        <member name="P:ConfigHandler.OptionAttribute.HelpMessage">
            <summary>
            Help on the option
            </summary>
        </member>
        <member name="P:ConfigHandler.OptionAttribute.DisplayFormat">
            <summary>
            Try to display value from ToString('DisplayFormat')
            </summary>
        </member>
        <member name="M:ConfigHandler.OptionAttribute.#ctor">
            <summary>
            Create an OptionAttribute
            </summary>
        </member>
        <member name="M:ConfigHandler.OptionAttribute.#ctor(System.String,System.String)">
            <summary>
            Create an OptionAttribute
            </summary>
            <param name="helpMessage"></param>
            <param name="displayFormat"></param>
        </member>
    </members>
</doc>
